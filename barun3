Q1.Write a shell script iaop to perform integer arithmetic on two numbers, where the value of 
the two numbers will be given during runtime. 
______________________________________________________________________________________________________________________________________
sol=>  #!/bin/bash

# Prompt user for the first number
read -p "Enter the first number: " num1

# Prompt user for the second number
read -p "Enter the second number: " num2

# Display operation options
echo "Select an operation to perform:"
echo "1. Addition (+)"
echo "2. Subtraction (-)"
echo "3. Multiplication (*)"
echo "4. Division (/)"
echo "5. Modulus (%)"

# Prompt user to select an operation
read -p "Enter the option number (1-5): " option

# Perform the selected arithmetic operation
case $option in
    1) result=$((num1 + num2))
       echo "Result of Addition: $result"
       ;;
    2) result=$((num1 - num2))
       echo "Result of Subtraction: $result"
       ;;
    3) result=$((num1 * num2))
       echo "Result of Multiplication: $result"
       ;;
    4) 
       if [ $num2 -ne 0 ]; then
           result=$((num1 / num2))
           echo "Result of Division: $result"
       else
           echo "Error: Division by zero is not allowed."
       fi
       ;;
    5) 
       if [ $num2 -ne 0 ]; then
           result=$((num1 % num2))
           echo "Result of Modulus: $result"
       else
           echo "Error: Modulus by zero is not allowed."
       fi
       ;;
    *) echo "Invalid option. Please choose a valid operation."
       ;;
esac

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q2.Write a shell script faop to perform floating point arithmetic on two numbers, where the
value of the two numbers will be given during runtime
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=> #!/bin/bash

read -p "Enter the first number: " num1
read -p "Enter the second number: " num2

echo "Select an operation to perform:"
echo "1. Addition (+)"
echo "2. Subtraction (-)"
echo "3. Multiplication (*)"
echo "4. Division (/)"

read -p "Enter the option number (1-4): " option

case $option in
    1) result=$(echo "$num1 + $num2" | bc -l)
       echo "Result: $result"
       ;;
    2) result=$(echo "$num1 - $num2" | bc -l)
       echo "Result: $result"
       ;;
    3) result=$(echo "$num1 * $num2" | bc -l)
       echo "Result: $result"
       ;;
    4) 
       if (( $(echo "$num2 != 0" | bc -l) )); then
           result=$(echo "$num1 / $num2" | bc -l)
           echo "Result: $result"
       else
           echo "Error: Division by zero"
       fi
       ;;
    *) echo "Invalid option"
       ;;
esac
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3.Ramesh’s basic salary is input through the keyboard. His dearness allowance is 40% of 
basic salary, and house rent allowance is 20% of basic salary. Write a program to 
calculate his gross salary
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

sol=>#!/bin/bash

read -p "Enter Ramesh's basic salary: " basic_salary

da=$(echo "0.4 * $basic_salary" | bc -l)
hra=$(echo "0.2 * $basic_salary" | bc -l)
gross_salary=$(echo "$basic_salary + $da + $hra" | bc -l)

echo "Ramesh's Gross Salary: $gross_salary"

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4.If a five digit number is input given through the keyboard during runtime, write a
program to calculate the sum of its digits
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>#!/bin/bash

read -p "Enter a five-digit number: " number

if ! [[ $number =~ ^[0-9]{5}$ ]]; then
    echo "Error: Please enter a valid five-digit number."
    exit 1
fi

sum=0
while [ $number -gt 0 ]; do
    digit=$((number % 10))
    sum=$((sum + digit))
    number=$((number / 10))
done

echo "The sum of the digits is: $sum"

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q5.If cost price and selling price of an item is input through the keyboard, write a program to 
determine whether the seller has made profit or incurred loss. Also determine how much 
profit was made or loss incurred.
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>
#!/bin/bash

read -p "Enter the cost price of the item: " cost_price
read -p "Enter the selling price of the item: " selling_price

if (( $(echo "$selling_price > $cost_price" | bc -l) )); then
    profit=$(echo "$selling_price - $cost_price" | bc -l)
    echo "The seller made a profit of: $profit"
elif (( $(echo "$selling_price < $cost_price" | bc -l) )); then
    loss=$(echo "$cost_price - $selling_price" | bc -l)
    echo "The seller incurred a loss of: $loss"
else
    echo "There is no profit or loss. The seller broke even."
fi
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q6.Write a shell script which receives any year from the keyboard and determines, whether 
the year is a leap year or not. If no argument is supplied the current year should be 
assumed
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>
#!/bin/bash

if [ -z "$1" ]; then
    year=$(date +%Y)
else
    year=$1
fi

if (( year % 4 == 0 && year % 100 != 0 || year % 400 == 0 )); then
    echo "$year is a leap year."
else
    echo "$year is not a leap year."
fi
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q7.Write a shell script allow that will display a message to enter internal mark and
percentage in attendance, if the entered mark is greater than equal to 20 and entered
percentage in attendance is greater that equal to 75 then display the message Allowed for
Semester otherwise display the message Not allowed.
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>
#!/bin/bash

read -p "Enter internal mark: " mark
read -p "Enter attendance percentage: " attendance

if (( mark >= 20 && attendance >= 75 )); then
    echo "Allowed for Semester"
else
    echo "Not Allowed"
fi

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q8.Write a shell script small3 that will compare three numbers passed as command line
arguments and display the smallest one.
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>
#!/bin/bash

if [ $# -ne 3 ]; then
    echo "Usage: $0 num1 num2 num3"
    exit 1
fi

num1=$1
num2=$2
num3=$3

if (( num1 <= num2 && num1 <= num3 )); then
    smallest=$num1
elif (( num2 <= num1 && num2 <= num3 )); then
    smallest=$num2
else
    smallest=$num3
fi

echo "The smallest number is: $smallest"
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q9.Write a shell script check_char which will display one message to enter a character and
according to the character entered it will display appropriate message from the following
options:
 You entered a lower case alphabet
 You entered an upper case alphabet.
 You have entered a digit.
 You have entered a special symbol.
 You have entered more than one character
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>#!/bin/bash

read -p "Enter a character: " input

if [[ ${#input} -ne 1 ]]; then
    echo "You have entered more than one character"
elif [[ $input =~ [a-z] ]]; then
    echo "You entered a lower case alphabet"
elif [[ $input =~ [A-Z] ]]; then
    echo "You entered an upper case alphabet"
elif [[ $input =~ [0-9] ]]; then
    echo "You have entered a digit"
else
    echo "You have entered a special symbol"
fi
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q10.Write a shell script class_time which will display one message to enter a day and
according to the day entered it will display the DOS class time along with the room
information or the message “No class on day_name” or “Holiday” for Sunday
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________

#!/bin/bash

read -p "Enter the day: " day

case "$day" in
    Monday)
        echo "Monday: 9:00 AM - 11:00 AM, Room 101"
        ;;
    Tuesday)
        echo "Tuesday: 10:00 AM - 12:00 PM, Room 102"
        ;;
    Wednesday)
        echo "Wednesday: 1:00 PM - 3:00 PM, Room 103"
        ;;
    Thursday)
        echo "Thursday: 9:00 AM - 11:00 AM, Room 104"
        ;;
    Friday)
        echo "Friday: 11:00 AM - 1:00 PM, Room 105"
        ;;
    Saturday)
        echo "Saturday: 2:00 PM - 4:00 PM, Room 106"
        ;;
    Sunday)
        echo "Holiday"
        ;;
    *)
        echo "No class on $day"
        ;;
esac
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q11.Write a shell script filechk that will take two file names as command line arguments, and
check whether the content of two files are same or not . If contents of two files are same,
then it will display the message: Files filename1 and filename2 have same content.
then delete the second file
and display the message: So filename2 is deleted.
Otherwise display the message: Files filename1 and filename2 have different content
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>

#!/bin/bash

if [ $# -ne 2 ]; then
    echo "Usage: $0 <file1> <file2>"
    exit 1
fi

file1=$1
file2=$2

if cmp -s "$file1" "$file2"; then
    echo "Files $file1 and $file2 have same content."
    rm "$file2"
    echo "So $file2 is deleted."
else
    echo "Files $file1 and $file2 have different content."
fi
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

q12.Write a shell script calculator that will take three command line arguments, where the
first argument will specify the first operand, second argument will specify the operator
and the third argument will specify the second operand and display the output of the
arithmetic operation specified in the following format: op1 operator op2 = result .
If the arguments will be passed in any other sequence, it will display the message:
“Invalid input “
Enter input in following format: op1 operator op2
The symbols to be used for different operators are as follows:
Addition: + Subtraction: -
Multiplication: x Division: /
Modulo: % Exponent: ^
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________
sol=>
#!/bin/bash

if [ $# -ne 3 ]; then
    echo "Invalid input"
    echo "Enter input in the following format: op1 operator op2"
    exit 1
fi

op1=$1
operator=$2
op2=$3

case $operator in
    +)
        result=$(echo "$op1 + $op2" | bc -l)
        echo "$op1 $operator $op2 = $result"
        ;;
    -)
        result=$(echo "$op1 - $op2" | bc -l)
        echo "$op1 $operator $op2 = $result"
        ;;
    x)
        result=$(echo "$op1 * $op2" | bc -l)
        echo "$op1 $operator $op2 = $result"
        ;;
    /)
        if (( $(echo "$op2 == 0" | bc -l) )); then
            echo "Error: Division by zero is not allowed"
        else
            result=$(echo "$op1 / $op2" | bc -l)
            echo "$op1 $operator $op2 = $result"
        fi
        ;;
    %)
        result=$(echo "$op1 % $op2" | bc)
        echo "$op1 $operator $op2 = $result"
        ;;
    ^)
        result=$(echo "$op1 ^ $op2" | bc -l)
        echo "$op1 $operator $op2 = $result"
        ;;
    *)
        echo "Invalid input"
        echo "Enter input in the following format: op1 operator op2"
        ;;
esac
















